package qz.github.viewmodel

import android.content.ClipboardManager
import android.content.Context
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageView
import android.widget.TextView
import android.widget.Toast
import androidx.recyclerview.widget.RecyclerView
import com.bumptech.glide.Glide
import qz.github.R // Make sure R is correctly imported based on your project structure
import qz.github.model.ProfilInfo

class MAdapter(private val netebang: List<ProfilInfo>) : RecyclerView.Adapter<MAdapter.ViewHolder>() {

    class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
        val img: ImageView = itemView.findViewById(R.id.avatar)
        val user: TextView = itemView.findViewById(R.id.user)
        val followers: TextView = itemView.findViewById(R.id.followersCount)
        val repos: TextView = itemView.findViewById(R.id.publicreposCount)
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
        val view = LayoutInflater.from(parent.context).inflate(R.layout.costum_list, parent, false)
        return ViewHolder(view)
    }

    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
        val profilInfo = netebang[position]
        val context = holder.itemView.context

        Glide.with(context)
            .load(profilInfo.avatar)
            .into(holder.img)

        holder.user.text = profilInfo.username
        holder.repos.text = profilInfo.publicReposCount.toString() // Convert Int to String
        holder.followers.text = profilInfo.followersCount.toString() // Convert Int to String

        holder.itemView.setOnLongClickListener {
            val clipboardManager = context.getSystemService(Context.CLIPBOARD_SERVICE) as ClipboardManager
            clipboardManager.setText(profilInfo.username)
            Toast.makeText(context, profilInfo.username + " copied to clipboard", Toast.LENGTH_SHORT).show()
            true // Indicate that the long click was consumed
        }
    }

    override fun getItemCount(): Int {
        return netebang.size
    }
}
